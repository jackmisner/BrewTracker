name: Frontend CI

on:
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci.yml"
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run tests with coverage
        working-directory: ./frontend
        env:
          REACT_APP_API_URL: "http://localhost:5000/api"
          CI: true
        run: |
          # Run the coverage script from package.json
          npm run coverage

          # Check coverage threshold (70%)
          npx nyc check-coverage --lines 70 --functions 70 --branches 70 --statements 70 || {
            echo "Coverage is below 70% threshold"
            exit 1
          }

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/coverage-final.json
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build application
        working-directory: ./frontend
        env:
          REACT_APP_API_URL: "http://localhost:5000/api"
          CI: true
        run: npm run build

      - name: Check build artifacts
        working-directory: ./frontend
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Build completed successfully"
          ls -la build/
