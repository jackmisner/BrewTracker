name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: "./backend/requirements.txt"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout=60
          elapsed=0
          until nc -z localhost 27017; do
            if [ $elapsed -ge $timeout ]; then
              echo "MongoDB failed to start within $timeout seconds"
              exit 1
            fi
            echo "MongoDB not ready yet, waiting... ($elapsed/$timeout seconds)"
            sleep 2
            elapsed=$((elapsed + 2))
          done
          echo "MongoDB is ready!"

      - name: Check code formatting with Black
        working-directory: ./backend
        run: black --check --diff .

      - name: Check import sorting with isort
        working-directory: ./backend
        run: isort --check-only --diff .

      - name: Lint with flake8
        working-directory: ./backend
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests with coverage
        working-directory: ./backend
        env:
          JWT_SECRET_KEY: "test_jwt_secret_key_for_ci"
          TEST_MONGO_URI: "mongodb://localhost:27017/brewtracker_test"
          MONGO_URI: "mongodb://localhost:27017/brewtracker_test"
          FLASK_APP: "app.py"
          FLASK_ENV: "testing"
          SECRET_KEY: "test_secret_key_for_ci"
        run: |
          pytest --cov=. --cov-report=term-missing --cov-report=xml --cov-fail-under=70 -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./backend
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
